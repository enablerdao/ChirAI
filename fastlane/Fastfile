# Fastlane 自動化設定

default_platform(:ios)

platform :ios do
  
  # 開発前の準備
  before_all do
    ensure_git_status_clean
    git_pull
    cocoapods if File.exist?("Podfile")
  end

  # TestFlight 自動配布
  desc "🚀 TestFlight に自動デプロイ"
  lane :beta do
    # ビルド番号を自動増加
    increment_build_number(
      build_number: Time.now.strftime("%Y%m%d%H%M")
    )
    
    # 証明書とプロファイルを同期
    match(type: "appstore")
    
    # ビルド
    build_app(
      scheme: "ChirAI",
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
          "com.enablerdao.ChirAI" => "match AppStore com.enablerdao.ChirAI"
        }
      }
    )
    
    # TestFlight アップロード
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      changelog: last_git_commit[:message]
    )
    
    # Slack 通知
    slack(
      message: "🚀 ChirAI がTestFlightにデプロイされました！",
      channel: "#ios-releases",
      success: true
    )
  end

  # App Store リリース
  desc "🍎 App Store に自動リリース"
  lane :release do |options|
    # バージョン設定
    increment_version_number(
      version_number: options[:version]
    )
    
    # ビルド
    build_app(
      scheme: "ChirAI",
      export_method: "app-store"
    )
    
    # スクリーンショット準備
    capture_screenshots
    
    # App Store アップロード
    upload_to_app_store(
      force: true,
      automatic_release: true,
      submit_for_review: true,
      
      # メタデータ
      app_identifier: "com.enablerdao.ChirAI",
      
      name: {
        "ja" => "ChirAI - ローカルAIチャット",
        "en-US" => "ChirAI - Local AI Chat"
      },
      
      subtitle: {
        "ja" => "インテリジェントローカルAIチャット",
        "en-US" => "Intelligent Local AI Chat"
      },
      
      description: {
        "ja" => File.read("./metadata/ja/description.txt"),
        "en-US" => File.read("./metadata/en-US/description.txt")
      },
      
      keywords: {
        "ja" => "AI,チャット,ローカル,プライバシー,ollama,日本語,LLM,会話,桜,機械学習",
        "en-US" => "AI,chat,local,privacy,ollama,japanese,LLM,conversation,sakura,machine learning"
      },
      
      # プライバシー
      privacy_url: {
        "ja" => "https://github.com/enablerdao/ChirAI/blob/main/PRIVACY_POLICY_GDPR_COMPLIANT.md",
        "en-US" => "https://github.com/enablerdao/ChirAI/blob/main/PRIVACY_POLICY_GDPR_COMPLIANT.md"
      },
      
      # 審査情報
      app_review_information: {
        first_name: "ChirAI",
        last_name: "Team",
        phone_number: "+81-90-0000-0000",
        email_address: "review@enablerdao.com",
        demo_user: "",
        demo_password: "",
        notes: "This app requires Ollama (https://ollama.ai) to be installed locally. All AI processing happens on device."
      }
    )
    
    # リリース通知
    slack(
      message: "🎉 ChirAI v#{options[:version]} が App Store にリリースされました！",
      channel: "#ios-releases",
      success: true
    )
  end

  # スクリーンショット自動生成
  desc "📸 スクリーンショット自動生成"
  lane :screenshots do
    capture_screenshots(
      workspace: "ChirAI.xcworkspace",
      scheme: "ChirAI-UITests",
      output_directory: "./screenshots",
      clear_previous_screenshots: true,
      
      devices: [
        "iPhone 15 Pro",
        "iPhone 15 Plus", 
        "iPhone 8 Plus",
        "iPad Pro (12.9-inch) (6th generation)"
      ],
      
      languages: ["ja", "en-US"],
      
      override_status_bar: true,
      
      # カスタムスクリーンショット設定
      screenshot_config: {
        "ja" => {
          "chat" => "チャット画面",
          "agents" => "AIエージェント",
          "settings" => "設定"
        },
        "en-US" => {
          "chat" => "Chat Interface",
          "agents" => "AI Agents",
          "settings" => "Settings"
        }
      }
    )
    
    # スクリーンショットをフレーム付きで加工
    frame_screenshots(
      silver: false,
      path: "./screenshots"
    )
  end

  # エラー時の処理
  error do |lane, exception|
    slack(
      message: "❌ エラーが発生しました: #{exception.message}",
      channel: "#ios-releases",
      success: false
    )
  end
  
  # 成功後の処理
  after_all do |lane|
    # Git タグを作成
    if lane == :release
      add_git_tag(
        tag: "release/#{get_version_number}"
      )
      push_git_tags
    end
    
    # クリーンアップ
    clean_build_artifacts
  end
end